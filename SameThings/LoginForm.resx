<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zuTAtp2guD4lbGziUs2pPbRZV52G248CLRzpUOl51AGTqWD+0XFG9I7haEFT1zpb84IID1o2YYGbfgji
        GC73HQNxYWgpIsxetMXgqsBi95fzGncXDcdFek/Vcz2GhheLnV6AtTd+7Myyv2igy6twd4RsbbvoG2hb
        Fz4yv1goxi0dNiW8Uy3wR77Q8nCbkVLJ5CXLGftzECv6sILZNBLyM9h0/ecz2CVtLqFytAXlNHzYwBl4
        YstKhFDqwY8JxY3SfeXKhgdmZ82D/kA4zPYdPdZ7Dp+85nsGiwdb6Zl10d+kL+nQmXfoQ6Nmd8AuXwwB
        HIxGudcHwcxVcuVLHZx395+o40K66iFbdBpUF4Z+0adJEzjd4GDl4l1qLW56Rnd64JFmw4Xfh4qWZlvT
        9IygpgRmcXUTlL+ATd7NBbwrVjOstns/20YGkDglE1e/bmEAAKHLMpWtrieZEW78hjL/AGg9mipmlFTT
        eGYl+vRXrENDeNLu7LHsam/ZCknbx0nJmnkipLsN1CFFuA6Tm+8+SpztflM+Ds2leje8MxT1gvg5T+xB
        K+9MCEwTOFDq5YtJV3TdqussT2t18ohEnRizb2tp+Fib56M/rpfj25tvqMy/uEWv2BAACg/+K//aAAwD
        AQACAAMAAAAQ88888888w8888888888888sruA388888888888uhCd0888887zy778EFjkx8882cq/0k
        jFV9Lh888HX52Tiy1FLaF8+7C0KpxMYOr9ss88CaoAwLyiPGW888WAcjQsYhyBAc888aKnvRI3WZAke8
        88rJq4pW3b5ILX8888Jm9uec947W88888stc49eit088888888MZ6YMu888888888888888888888//E
        ACcRAQACAQIFBAMBAQAAAAAAAAEAESExURAgQWFxkaGxwTBA0YHh/9oACAEDAQE/EP2MLxjfu9vnxqP/
        AAn/AD+TFp8Ph/IT7QusE6Zg4UJsjlDyfzmBcEzJQ7w6YToBmSxRy1CB64TSOAAwRafy/wC8ilmN0oQB
        3fUOtISwtnfsZt8DAbht8d6QCetn+yhS5j4szLGVy9uK5dGspQ0EsUVRaIuDYhU1DRicen1KMLOvbxAS
        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
        coAtBja83v0gdBUAUH7mpX/Q/9k=
</value>
  </data>
</root>